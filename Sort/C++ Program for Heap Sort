// Heap Sort 

#include<bits/stdc++.h>

using namespace std;

void swap(int *x, int *y)
{
    int t = *x;
    *x = *y;
    *y = t;
}

void heapify(int arr[], int n, int i)
{
    int l = 2*i+1;
    int r = 2*i+2;
    int largest = i;
    if(l < n && arr[l] > arr[i])
        largest = l;
    if(r < n && arr[r] > arr[largest])
        largest = r;
    if(largest != i)
    {
        swap(arr[largest], arr[i]);
        heapify(arr, n, largest);
    }
}

void heapSort(int *arr, int n)
{
    // heapify the array
    for(int i = n-1; i >= 0; i--)
        heapify(arr, n, i);

    // swap first and last
    for(int i = n-1; i > 0; i--)
    {
        swap(arr[0], arr[i]);
        heapify(arr, i, 0); //exclude last elements which are sorted
    }
}

void printArray(int arr[], int n)
{
    for (int i = 0; i < n; ++i)
        cout << arr[i] << " ";
    cout << "\n";
}

int main()
{
    int arr[] = { 12, 11, 13, 5, 6, 7 };
    int n = sizeof(arr) / sizeof(arr[0]);
    heapSort(arr, n);
    printArray(arr, n);
    return 0;
}
